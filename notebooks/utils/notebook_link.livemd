# Livebook notebook links

```elixir
Mix.install([{:kino, "~> 0.8.0"}])
```

## About

* Create a link for a notebook
* https://livebook.dev/badge

## Generate "Run in Livebook" button

![Run in Livebook](https://livebook.dev/badge/v1/blue.svg)
![Run in Livebook](https://livebook.dev/badge/v1/black.svg)
![Run in Livebook](https://livebook.dev/badge/v1/gray.svg)
![Run in Livebook](https://livebook.dev/badge/v1/pink.svg)

```elixir
default = "https://github.com/elixir-nx/bumblebee/blob/main/notebooks/examples.livemd"
livemd_src_url_input = Kino.Input.textarea("Notebook source URL", default: default)
```

```elixir
select_options = ~w[blue black gray pink] |> Enum.map(&{&1, String.capitalize(&1)})
button_color_input = Kino.Input.select("Button color", select_options)
```

```elixir
livemd_src_url = Kino.Input.read(livemd_src_url_input)
button_color = Kino.Input.read(button_color_input)

run_in_livebook_url = &("https://livebook.dev/run?url=" <> URI.encode_www_form(&1))
run_in_livebook_button = &"[![Run in Livebook](https://livebook.dev/badge/v1/#{&2}.svg)](#{&1})"

livemd_src_url
|> run_in_livebook_url.()
|> run_in_livebook_button.(button_color)
|> dbg()
|> IO.puts()
```

## Generate "Run notebook" URL

```elixir
livebook_url_input = Kino.Input.textarea("Livebook URL")
```

```elixir
livemd_src_url = Kino.Input.read(livemd_src_url_input)
livebook_url = Kino.Input.read(livebook_url_input)

[Path.join([livebook_url, "/import"]), "?", URI.encode_query(url: livemd_src_url)]
|> IO.puts()
```
